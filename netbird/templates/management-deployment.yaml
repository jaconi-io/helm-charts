apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "netbird.fullname" . }}-management
  labels:
    {{- include "netbird.management.labels" . | nindent 4 }}
spec:
  {{- if not .Values.management.autoscaling.enabled }}
  replicas: {{ .Values.management.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "netbird.management.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/management-cm.yaml") . | sha256sum }}
        {{- with .Values.management.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "netbird.management.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.management.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "netbird.management.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.management.podSecurityContext | nindent 8 }}
      initContainers:
        - name: configure
          image: golang:latest
          imagePullPolicy: {{ .Values.management.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - >
              go install github.com/drone/envsubst/cmd/envsubst@latest &&
              envsubst < /tmp/netbird/management.tmpl.json > /etc/netbird/management.json &&
              cat /etc/netbird/management.json
          env:
            - name: NETBIRD_DOMAIN
              value: {{ .Values.domain }}
            - name: NETBIRD_AUTH_OIDC_CONFIGURATION_ENDPOINT
              value: "{{ .Values.auth.authority }}/.well-known/openid-configuration"
            - name: NETBIRD_MGMT_API_CERT_FILE
              value: ""
            - name: NETBIRD_MGMT_API_CERT_KEY_FILE
              value: ""
            - name: NETBIRD_AUTH_AUDIENCE
              value: {{ .Values.auth.audience }}
            - name: NETBIRD_AUTH_DEVICE_AUTH_PROVIDER
              value: {{ .Values.auth.device.provider }}
            {{- if eq .Values.auth.device.provider "hosted" }}
            - name: NETBIRD_AUTH_DEVICE_AUTH_AUDIENCE
              value: "{{ .Values.auth.device.audience }}"
            - name: NETBIRD_AUTH_DEVICE_AUTH_AUTHORITY
              value: "{{ .Values.auth.device.authority }}"
            - name: NETBIRD_AUTH_DEVICE_AUTH_CLIENT_ID
              value: "{{ .Values.auth.device.clientID }}"
            - name: NETBIRD_AUTH_DEVICE_AUTH_DEVICE_AUTHORIZATION_ENDPOINT
              value: "{{ .Values.auth.device.deviceAuthorizationEndpoint }}"
            - name: NETBIRD_AUTH_DEVICE_AUTH_TOKEN_ENDPOINT
              value: "{{ .Values.auth.device.tokenEndpoint }}"
            {{- end }}
          volumeMounts:
            - mountPath: /etc/netbird
              name: config
            - mountPath: /tmp/netbird
              name: config-template
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.management.securityContext | nindent 12 }}
          image: "{{ .Values.management.image.repository }}:{{ .Values.management.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.management.image.pullPolicy }}
          args: ["--log-level", "debug"]
          ports:
            - name: http
              containerPort: {{ .Values.management.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.management.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/netbird
              name: config
            - mountPath: /var/lib/netbird
              name: management
      {{- with .Values.management.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.management.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.management.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          emptyDir:
            medium: Memory
        - name: config-template
          configMap:
            name: {{ include "netbird.fullname" . }}
        - name: management
          {{- if .Values.management.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "netbird.fullname" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
